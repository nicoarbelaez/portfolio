---
import { getProjectsByLanguage } from "@/utils/projects";
import Layout from "@/layouts/Layout.astro";
import { getRelativeLocaleUrl } from "astro:i18n";
import { getCurrentLang, useTranslations } from "@/i18n/utils";
import Hero from "./Hero.astro";

const lang = getCurrentLang(Astro.currentLocale);

const projects = await getProjectsByLanguage(lang);

const t = useTranslations(lang);
---

<Layout lang={lang} title={t("title")}>
  <main>
    <div class="w-4xl m-auto">
      <Hero t={t}/>
    </div>
    
    <section class="max-w-7xl mx-auto px-6 py-12">
      <header class="mb-12 text-center">
        <h1
          class="text-5xl font-extrabold tracking-tight mb-2 text-transparent bg-clip-text bg-gradient-to-r from-purple-500 to-indigo-600">
          Welcome to My Astro Site get
        </h1>
        <p class="text-lg text-gray-700 dark:text-gray-300">
          {t("hero.description")}
        </p>
      </header>

      <h2 class="text-3xl font-semibold mb-8 text-gray-800 dark:text-gray-100">
        My Projectsitories
      </h2>
      <div class="grid gap-8 sm:grid-cols-2 lg:grid-cols-3">
        {
          projects.map(({ slug, data: { screenshot, title, tags, difficulty, description } }) => {
            const img = screenshot ? screenshot : `/img/projects/${slug}.webp`;
            return (
              <a
                href={getRelativeLocaleUrl(lang, `/projects/${slug}`)}
                class="group relative block bg-white dark:bg-gray-900 rounded-3xl overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 transform hover:-translate-y-1">
                <img
                  transition:name={`img-${slug}`}
                  src={img}
                  alt={`Screenshot of ${title}`}
                  class="w-full h-40 object-cover group-hover:scale-105 transition-transform duration-300"
                />

                <div class="p-6">
                  <h3
                    transition:name={`title-${slug}`}
                    class="text-2xl font-bold mb-2 text-gray-900 dark:text-gray-100 group-hover:text-indigo-600 transition-colors duration-200">
                    {title}
                  </h3>

                  {description && (
                    <p
                      transition:name={`description-${slug}`}
                      class="text-gray-600 dark:text-gray-400 mb-4">
                      {description}
                    </p>
                  )}

                  <div class="flex flex-wrap gap-2 mb-4">
                    <span class="inline-block px-3 py-1 text-xs font-medium uppercase rounded-full bg-indigo-100 text-indigo-800">
                      {difficulty}
                    </span>
                    {tags.map((tag) => (
                      <span class="inline-block px-3 py-1 text-xs font-medium rounded-full bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300">
                        {tag}
                      </span>
                    ))}
                  </div>

                  <span class="inline-flex items-center text-sm font-semibold text-indigo-600 group-hover:underline">
                    View project â†’
                  </span>
                </div>
              </a>
            );
          })
        }
      </div>
    </section>
  </main>
</Layout>
