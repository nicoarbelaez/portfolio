---
import type { Transitions } from '@/i18n/utils';
import { LINKS } from '@/constants/link';
import Github from '@/icons/Github.astro';
import Linkedin from '@/icons/Linkedin.astro';
import { getYearsSince } from '@/utils/date';
import ArrowRight from '@/icons/ArrowRight.astro';
import File from '@/icons/File.astro';
import { PERSONAL_INFO } from '@/constants/constants';

interface Props {
  t: Transitions;
}

const { t } = Astro.props;
const description = t('hero.description').replace(
  '%years-experience%',
  getYearsSince('2023-01-01').toString()
);

const socialMedia = [
  { icon: Github, href: LINKS.GITHUB },
  { icon: Linkedin, href: LINKS.LINKEDIN }
];
---

<header
  id="about"
  class="relative flex min-h-svh flex-col-reverse items-center justify-evenly gap-y-10 py-38 md:min-h-auto md:flex-row md:justify-between md:gap-0"
>
  <div>
    <div>
      <h1 class="text-4xl font-bold sm:text-5xl">
        <a href="#">{PERSONAL_INFO.FULL_NAME}</a>
      </h1>
      <h2 class="mt-3 text-lg font-medium sm:text-xl">
        {t('hero.professional')}
      </h2>
      <p class="mt-4 max-w-xs">
        {description}
      </p>

      <div class="mt-8 flex gap-4">
        <a
          href="#projects"
          class="group hover:slate-200/95 items-center gap-2 rounded-lg border-2 border-slate-400/95 px-6 py-3 text-sm font-semibold text-slate-400/95 transition hover:text-teal-300"
        >
          {t('hero.cta')}
          <ArrowRight class="size-4" />
        </a>

        <a
          href="/resume.pdf"
          target="_blank"
          rel="noopener noreferrer"
          class="group hover:slate-200/95 items-center gap-2 rounded-lg border-2 border-slate-400/95 px-6 py-3 text-sm font-semibold text-slate-400/95 transition hover:text-teal-300"
        >
          <File class="size-4" />
          {t('nav.resume')}
        </a>
      </div>
    </div>

    <ul class="mt-8 ml-1 flex items-center" aria-label="Social media">
      {
        socialMedia.map(({ icon: Icon, href }) => {
          const name = Icon.name;
          const label = `${name} (opens in new tab)`;

          return (
            <li class="mr-5 shrink-0 text-xs">
              <a
                class="block text-slate-400/95 hover:text-slate-200/95"
                href={href}
                target="_blank"
                rel="noreferrer noopener"
                aria-label={label}
                title={name}
              >
                <span class="sr-only">{name}</span>
                <Icon />
              </a>
            </li>
          );
        })
      }
    </ul>
  </div>

  <div class="animate-float size-50 md:size-60 lg:size-70">
    <img
      class="rounded-xl border-x-4 border-t-4 border-slate-950/20 mask-b-from-85%"
      src="https://github.com/nicoarbelaez.png"
      alt="Github profile image"
    />
    <img
      class="pointer-events-none absolute inset-0 -z-10 size-full opacity-70 blur-2xl saturate-200"
      src="https://github.com/nicoarbelaez.png"
      alt="Github profile image (blur)"
    />
  </div>

  <div
    id="scroll-indicator"
    class="animate-duration-150 absolute right-0 bottom-0 left-0 hidden scale-100 animate-bounce flex-col items-center gap-2 pb-4 text-slate-400/40 md:hidden"
  >
    <span class="text-md">{t('hero.scroll')}</span>
    <ArrowRight class="size-6 rotate-90" />
  </div>
</header>
<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const scrollIndicator = document.getElementById('scroll-indicator');

    if (!scrollIndicator) return;

    scrollIndicator.classList.remove('hidden');
    scrollIndicator.classList.add('flex', 'animate-zoom-in');

    const handleScroll = () => {
      if (window.scrollY >= 350) {
        scrollIndicator.classList.remove('animate-zoom-in');
        scrollIndicator.classList.add('animate-zoom-out');

        window.removeEventListener('scroll', handleScroll);

        setTimeout(() => {
          scrollIndicator.classList.remove('flex', 'animate-zoom-out');
          scrollIndicator.classList.add('hidden');
        }, 300);
      }
    };

    window.addEventListener('scroll', handleScroll);
  });
</script>
