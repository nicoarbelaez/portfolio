---
import type { LocaleKey } from '@/i18n/ui';
import { getProjectsByLanguage, getImagePath, getRepoUrl } from '@/utils/projects';
import { getRelativeLocaleUrl } from 'astro:i18n';
import type { Transitions } from '@/i18n/utils';
import ProjectCard from '@/components/ui/ProjectCard.astro';
import Section from '@/components/Section.astro';

interface Props {
  lang: LocaleKey;
  t: Transitions;
}

const { lang, t } = Astro.props;

const translatedProjects = await getProjectsByLanguage(lang);

const projects = translatedProjects
  .map(({ slug, data }) => {
    const repoUrl = getRepoUrl(data.repo_url, slug);
    const img = getImagePath(data.screenshot, slug);

    return {
      ...data,
      img,
      slug,
      repo_url: repoUrl
    };
  })
  .sort((a, b) => b.priority - a.priority);
---

<Section id="projects" title={t('nav.projects')}>
  <div class="flex flex-col gap-y-10 md:grid md:grid-cols-2 md:gap-x-12 md:gap-y-8">
    {
      projects.map(({ slug, img, title, stack, description, repo_url, demo_url }) => (
        <ProjectCard
          href={getRelativeLocaleUrl(lang, `/projects/${slug}`)}
          slug={slug}
          img={img}
          title={title}
          stack={stack}
          description={description}
          repo_url={repo_url}
          demo_url={demo_url}
          t={t}
        />
      ))
    }
  </div>
</Section>
