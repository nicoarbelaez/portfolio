---
import { getCurrentLang, useTranslations } from '@/i18n/utils';
import { type Project } from '@/utils/projects';
import Layout from '@/layouts/Layout.astro';
import { getRelativeLocaleUrl } from 'astro:i18n';
import { getImagePath, getRepoUrl } from '@/utils/projects';
import Badge from '@/components/ui/Badge.astro';
import ArrowRight from '@/icons/ArrowRight.astro';
import ImagePlaceholder from '@/components/ui/ImagePlaceholder.astro';
import LinkButton from './ui/LinkButton.astro';
import Repository from '@/icons/Repository.astro';
import Link from '@/icons/Link.astro';
import { PERSONAL_INFO } from '@/constants/constants';

interface Props {
  project: Project;
}

const { project } = Astro.props as Props;
const lang = getCurrentLang(Astro.currentLocale);
const t = useTranslations(lang);

const { slug, data } = project;
const { title, description, screenshot, stack, repo_url, demo_url } = data;

const img = getImagePath(screenshot, slug);
const repoUrl = getRepoUrl(repo_url, slug);

const { Content } = await project.render();
const desc = `${PERSONAL_INFO.FULL_NAME} | ${t('title')}. ${description}`;
---

<Layout
  lang={lang}
  title={title}
  description={desc}
  image={img || '/og-default.jpg'}
  type="article"
>
  <section class="mx-auto max-w-3xl px-6 pt-20">
    <a href={`${getRelativeLocaleUrl(lang)}#${slug}`} class="mb-6 inline-flex items-center">
      <span class="relative inline-flex overflow-hidden rounded-full p-[1px]">
        <div
          class="inline-flex items-center justify-center rounded-full bg-teal-300/10 px-4 py-2 text-sm text-teal-300 transition hover:bg-teal-300/20"
        >
          <ArrowRight class="mr-2 size-4 rotate-180" />
          {t('action.back')}
        </div>
      </span>
    </a>

    <article class="flex flex-col gap-4">
      <h1 transition:name={`title-${slug}`} class="mb-4 text-2xl font-bold">
        {title}
      </h1>

      <div class="mx-auto w-4/5">
        <ImagePlaceholder
          transitionName={`img-${slug}`}
          src={img}
          alt={`Screenshot of ${title}`}
          class="aspect-16/9 w-full rounded-md border-2 border-slate-200/10 object-cover shadow-lg transition-colors group-hover:border-slate-200/30 hover:border-slate-200/30"
        />
      </div>

      <p transition:name={`description-${slug}`} class="text-pretty">
        {description}
      </p>

      {
        (repoUrl || demo_url) && (
          <div class="flex flex-wrap gap-3">
            {repoUrl && <LinkButton href={repoUrl} icon={Repository} text={t('project.code')} />}
            {demo_url && <LinkButton href={demo_url} icon={Link} text={t('project.demo')} />}
          </div>
        )
      }

      {
        stack && (
          <ul class="flex flex-wrap gap-2">
            {stack.map((tech) => (
              <Badge>{tech}</Badge>
            ))}
          </ul>
        )
      }

      <div class="prose prose-custom prose-slate prose-invert max-w-none my-4">
        <Content />
      </div>
    </article>
  </section>
</Layout>
